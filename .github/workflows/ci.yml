name: Python Lint and Build remote images

on: 
  pull_request:
    branches: ["main"]

  push:
    branches: ["main"]

permissions:
  packages: write

jobs: 
  linting: 
    runs-on: ubuntu-latest

    steps: 
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        
      - run: pip install flake8
      - name: Run flake8 linter
        run: flake8 .  

  docker_build_and_publish:
    needs: linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Build and Push Images with Buildx
        run: |
          # Build and push each image individually
          docker buildx build \
            --push \
            --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ble:cache \
            --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ble:cache,mode=max \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/ble:latest \
            ./Docker_workspace/ble

          docker buildx build \
            --push \
            --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/client:cache \
            --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/client:cache,mode=max \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/client:latest \
            ./Docker_workspace/client

          docker buildx build \
            --push \
            --cache-from=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodered:cache \
            --cache-to=type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nodered:cache,mode=max \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/nodered:latest \
            ./Docker_workspace/nodered

      # Optional: Verify pushed images
      # - name: List Images
      #   run: docker images 
          



      # - name: Set up Docker Compose
      #   run: |
      #     sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      #     sudo chmod +x /usr/local/bin/docker-compose
      #     docker-compose --version
  
      # - name: Cache Docker layers
      #   uses: actions/cache@v3
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-
  
      # - name: Build and Push Images with Docker Compose
      #   run: |
      #     docker-compose -f ./Docker_workspace/docker-compose.yml build \
      #       --progress=plain \
      #       --cache-from=type=local,src=/tmp/.buildx-cache \
      #       --cache-to=type=local,dest=/tmp/.buildx-cache
      #     docker-compose -f ./Docker_workspace/docker-compose.yml push


